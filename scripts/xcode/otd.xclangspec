// Intel Assembler language specs

(

/****************************************************************************/
// MARK: Keywords
/****************************************************************************/

    {
        Identifier = "xcode.lang.otd.identifier";
        Syntax = {
            StartChars = "$";
            Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$_.";
            Type = "xcode.syntax.identifier";
        };
    },

    {
        Identifier = "xcode.lang.otd.directive";
        Syntax = {
            StartChars = "\\";
            Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";
            Type = "xcode.syntax.keyword";
        };
    },

    {
        Identifier = "xcode.lang.otd.verbatim";
        Syntax = {
            Start = "***";
            End = "***";
            Type = "xcode.syntax.attribute";
        };
    },

    {
        Identifier = "xcode.lang.otd.preprocessor";
        Syntax = {
            StartAtBOL = YES;
            StartChars = "#";
            Chars = "abcdefghijklmnopqrstuvwxyz.";
            Type = "xcode.syntax.preprocessor";
        };
    },

/****************************************************************************/
// MARK: Simple Syntax Coloring
/****************************************************************************/

    {
        Identifier = "xcode.lang.otd";
        Description = "Intel386 Assembler Coloring";
        BasedOn = "xcode.lang.simpleColoring";
        IncludeInMenu = YES;
        Name = "Assembly (Intel)";
        Syntax = {
            Tokenizer = "xcode.lang.otd.lexer";
            IncludeRules = (
                "xcode.lang.otd.label"
            );
            Type = "xcode.syntax.plain";
        };
    },
    {
        Identifier = "xcode.lang.otd.lexer";
        Syntax = {
            IncludeRules = (
                "xcode.lang.comment",
                "xcode.lang.comment.singleline",
                "xcode.lang.otd.directive",
                "xcode.lang.otd.identifier",
                "xcode.lang.otd.verbatim",
                "xcode.lang.otd.preprocessor",
            );
        };
    },
    
    {
        Identifier = "xcode.lang.otd.label";
        Syntax = {
            StartAtBOL = YES;
            Tokenizer = "xcode.lang.otd.lexer";
            Rules = (
                "xcode.lang.otd.label.name",
                ":",
            );
            Type = "xcode.syntax.definition.function";
        };
    },
    
    {
        Identifier = "xcode.lang.otd.label.name";
        Syntax = {
            StartAtBOL = YES;
            Tokenizer = "xcode.lang.otd.lexer";
            Rules = (
                "xcode.lang.otd.identifier",
            );
            Type = "xcode.syntax.name.partial";
        };
    },

)
